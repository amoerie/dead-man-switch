name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]

    steps:
      - uses: actions/checkout@v2

      - name: Restore NuGet packages
        run: nuget restore ./src/DeadManSwitch.sln
        if: matrix.os == 'windows-latest'

      - name: Build DeadManSwitch
        run: dotnet build ./src/DeadManSwitch/DeadManSwitch.csproj --configuration Release

      - name: Build DeadManSwitch.AspNetCore
        run: dotnet build ./src/DeadManSwitch.AspNetCore/DeadManSwitch.AspNetCore.csproj --configuration Release

      - name: Build DeadManSwitch.Examples.AspNetCore
        run: dotnet build ./src/DeadManSwitch.Examples.AspNetCore/DeadManSwitch.Examples.AspNetCore.csproj --configuration Release

      - name: Build DeadManSwitch.Examples.AspNetFramework
        run: dotnet build ./src/DeadManSwitch.Examples.AspNetFramework/DeadManSwitch.Examples.AspNetFramework.csproj --configuration Release
        if: matrix.os == 'windows-latest'

      - name: Run DeadManSwitch.Tests on .NET Core
        run: dotnet test ./src/DeadManSwitch.Tests/DeadManSwitch.Tests.csproj --configuration Release --framework net7.0 --collect:"XPlat Code Coverage" --settings ./src/coverlet.runsettings

      - name: Run DeadManSwitch.Tests on .NET Framework
        run: dotnet test ./src/DeadManSwitch.Tests/DeadManSwitch.Tests.csproj --configuration Release --framework net48
        if: matrix.os == 'windows-latest'

      - name: Run DeadManSwitch.AspNetCore.Tests
        run: dotnet test ./src/DeadManSwitch.AspNetCore.Tests/DeadManSwitch.AspNetCore.Tests.csproj --configuration Release --framework net7.0 --collect:"XPlat Code Coverage" --settings ./src/coverlet.runsettings

      - uses: codecov/codecov-action@v2
