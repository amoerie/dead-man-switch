name: build

on: [pull_request, push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        dotnet-version: [2.2.108]

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
      
    - name: Build DeadManSwitch
      run: dotnet build ./src/DeadManSwitch/DeadManSwitch.csproj --configuration Release
      
    - name: Build DeadManSwitch.AspNetCore
      run: dotnet build ./src/DeadManSwitch.AspNetCore/DeadManSwitch.AspNetCore.csproj --configuration Release
    
    - name: Build DeadManSwitch.Examples.AspNetCore
      run: dotnet build ./src/DeadManSwitch.Examples.AspNetCore/DeadManSwitch.Examples.AspNetCore.csproj --configuration Release
    
    - name: Build DeadManSwitch.Examples.AspNetFramework
      run: msbuild ./src/DeadManSwitch.Examples.AspNetFramework/DeadManSwitch.Examples.AspNetFramework.csproj -target:Build -restore -property:Configuration=Release
      if: matrix.os == 'windows-latest'
    
    - name: Run DeadManSwitch.Tests on .NET Core
      run: dotnet test ./src/DeadManSwitch.Tests/DeadManSwitch.Tests.csproj --configuration Release --framework netcoreapp2.1
    
    - name: Run DeadManSwitch.Tests on .NET Framework
      run: dotnet test ./src/DeadManSwitch.Tests/DeadManSwitch.Tests.csproj --configuration Release --framework net48
      if: matrix.os == 'windows-latest'
    
    - name: Run DeadManSwitch.AspNetCore.Tests
      run: dotnet test ./src/DeadManSwitch.AspNetCore.Tests/DeadManSwitch.AspNetCore.Tests.csproj --configuration Release --framework netcoreapp2.1
